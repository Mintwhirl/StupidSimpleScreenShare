{"version":3,"file":"HostView-Td-WtJjh.js","sources":["../../src/components/HostView.jsx"],"sourcesContent":["import { useState, useEffect, useRef, useMemo } from 'react';\nimport VideoPlayer from './VideoPlayer';\nimport { useWebRTC } from '../hooks/useWebRTC';\nimport { useRoomContext } from '../contexts/RoomContext';\nimport { API_ENDPOINTS } from '../constants';\n\nfunction HostView({ config, onGoHome }) {\n  console.log('HostView: Component is rendering');\n  const { roomId, updateSenderSecret } = useRoomContext();\n  console.log('HostView: roomId =', roomId, 'updateSenderSecret =', typeof updateSenderSecret);\n  const [isSharing, setIsSharing] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const [viewerCount, setViewerCount] = useState(0);\n  const [error, setError] = useState(null);\n  const [shareButtonText, setShareButtonText] = useState('Start Sharing');\n  const [copyStatus, setCopyStatus] = useState(null); // For copy feedback\n\n  const localVideoRef = useRef(null);\n  const {\n    startScreenShare,\n    stopScreenShare,\n    connectionState,\n    peerConnections,\n    error: webrtcError,\n  } = useWebRTC(roomId, 'host', config);\n\n  // Update connection status based on WebRTC state\n  useEffect(() => {\n    setConnectionStatus(connectionState);\n  }, [connectionState]);\n\n  // Update viewer count based on peer connections\n  useEffect(() => {\n    setViewerCount(Object.keys(peerConnections).length);\n  }, [peerConnections]);\n\n  // Handle WebRTC errors\n  useEffect(() => {\n    if (webrtcError) {\n      setError(webrtcError);\n    }\n  }, [webrtcError]);\n\n  // Register host as sender for chat when component mounts\n  useEffect(() => {\n    const registerHostSender = async () => {\n      console.log('HostView: Attempting to register host sender for room:', roomId);\n      if (!roomId) {\n        console.log('HostView: No roomId, skipping registration');\n        return;\n      }\n\n      try {\n        console.log('HostView: Making registration request to:', API_ENDPOINTS.REGISTER_SENDER);\n        const response = await fetch(API_ENDPOINTS.REGISTER_SENDER, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ roomId, senderId: 'host' }),\n        });\n\n        console.log('HostView: Registration response status:', response.status);\n        if (response.ok) {\n          const data = await response.json();\n          console.log('HostView: Registration successful, secret received');\n          updateSenderSecret(data.secret);\n        } else {\n          console.warn('HostView: Failed to register host sender:', response.status);\n        }\n      } catch (err) {\n        console.warn('HostView: Failed to register host sender:', err);\n      }\n    };\n\n    registerHostSender();\n  }, [roomId, updateSenderSecret]);\n\n  // Handle screen share start\n  const handleStartSharing = async () => {\n    try {\n      setError(null);\n      setShareButtonText('Starting...');\n\n      const stream = await startScreenShare();\n      if (stream && localVideoRef.current) {\n        localVideoRef.current.srcObject = stream;\n        setIsSharing(true);\n        setShareButtonText('Stop Sharing');\n      }\n    } catch (err) {\n      console.error('Error starting screen share:', err);\n      setError('Failed to start screen sharing. Please check your browser permissions.');\n      setShareButtonText('Start Sharing');\n    }\n  };\n\n  // Handle screen share stop\n  const handleStopSharing = async () => {\n    try {\n      await stopScreenShare();\n      if (localVideoRef.current) {\n        localVideoRef.current.srcObject = null;\n      }\n      setIsSharing(false);\n      setShareButtonText('Start Sharing');\n    } catch (err) {\n      console.error('Error stopping screen share:', err);\n      setError('Failed to stop screen sharing.');\n    }\n  };\n\n  // Handle share button click\n  const handleShareToggle = () => {\n    if (isSharing) {\n      handleStopSharing();\n    } else {\n      handleStartSharing();\n    }\n  };\n\n  // Copy room ID to clipboard\n  const copyRoomId = () => {\n    navigator.clipboard\n      .writeText(roomId)\n      .then(() => {\n        setCopyStatus('success');\n        setTimeout(() => setCopyStatus(null), 2000);\n      })\n      .catch((err) => {\n        console.error('Failed to copy room ID:', err);\n        setCopyStatus('error');\n        setTimeout(() => setCopyStatus(null), 2000);\n      });\n  };\n\n  // Memoized status helpers to prevent re-creation on every render\n  const statusColor = useMemo(() => {\n    switch (connectionStatus) {\n      case 'connected':\n        return 'text-green-600';\n      case 'connecting':\n        return 'text-yellow-600';\n      case 'disconnected':\n        return 'text-red-600';\n      default:\n        return 'text-gray-600';\n    }\n  }, [connectionStatus]);\n\n  const statusText = useMemo(() => {\n    switch (connectionStatus) {\n      case 'connected':\n        return 'Connected';\n      case 'connecting':\n        return 'Connecting...';\n      case 'disconnected':\n        return 'Disconnected';\n      default:\n        return 'Unknown';\n    }\n  }, [connectionStatus]);\n\n  return (\n    <div className='space-y-6'>\n      {/* Header */}\n      <div className='bg-white rounded-lg shadow-md p-6'>\n        <div className='flex items-center justify-between'>\n          <div>\n            <h2 className='text-2xl font-bold text-gray-900 mb-2'>üñ•Ô∏è Screen Sharing Room</h2>\n            <p className='text-gray-600'>Share your screen with others. Viewers can join using the room ID below.</p>\n          </div>\n          <div className='text-right'>\n            <div className={`text-sm font-medium ${statusColor}`}>Status: {statusText}</div>\n            <div className='text-sm text-gray-500'>Viewers: {viewerCount}</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Room ID Section */}\n      <div className='bg-white rounded-lg shadow-md p-6'>\n        <h3 className='text-lg font-semibold text-gray-900 mb-4'>Room Information</h3>\n        <div className='flex items-center space-x-4'>\n          <div className='flex-1'>\n            <label className='block text-sm font-medium text-gray-700 mb-2'>Room ID</label>\n            <div className='flex items-center space-x-2'>\n              <input\n                type='text'\n                value={roomId}\n                readOnly\n                className='flex-1 px-3 py-2 border border-gray-300 rounded-lg bg-gray-50 text-gray-900 font-mono text-sm'\n              />\n              <button\n                onClick={copyRoomId}\n                className={`px-4 py-2 text-white rounded-lg transition-colors ${\n                  copyStatus === 'success'\n                    ? 'bg-green-600'\n                    : copyStatus === 'error'\n                      ? 'bg-red-600'\n                      : 'bg-blue-600 hover:bg-blue-700'\n                }`}\n              >\n                {copyStatus === 'success' ? 'Copied!' : copyStatus === 'error' ? 'Failed!' : 'Copy'}\n              </button>\n            </div>\n          </div>\n        </div>\n        <p className='text-sm text-gray-500 mt-2'>Share this room ID with others so they can view your screen.</p>\n      </div>\n\n      {/* Screen Share Controls */}\n      <div className='bg-white rounded-lg shadow-md p-6'>\n        <h3 className='text-lg font-semibold text-gray-900 mb-4'>Screen Share Controls</h3>\n        <div className='flex items-center justify-center space-x-4'>\n          <button\n            onClick={handleShareToggle}\n            disabled={connectionStatus === 'connecting'}\n            className={`px-6 py-3 rounded-lg font-medium transition-colors ${\n              isSharing ? 'bg-red-600 text-white hover:bg-red-700' : 'bg-green-600 text-white hover:bg-green-700'\n            } ${connectionStatus === 'connecting' ? 'opacity-50 cursor-not-allowed' : ''}`}\n          >\n            {connectionStatus === 'connecting' ? 'Connecting...' : shareButtonText}\n          </button>\n\n          {isSharing && (\n            <div className='flex items-center space-x-2 text-green-600'>\n              <div className='w-2 h-2 bg-green-600 rounded-full animate-pulse'></div>\n              <span className='text-sm font-medium'>Sharing Active</span>\n            </div>\n          )}\n        </div>\n\n        {!isSharing && (\n          <div className='mt-4 text-center'>\n            <p className='text-sm text-gray-600'>Click \"Start Sharing\" to begin sharing your screen with viewers.</p>\n          </div>\n        )}\n      </div>\n\n      {/* Error Display */}\n      {error && (\n        <div className='bg-red-50 border border-red-200 rounded-lg p-4'>\n          <div className='flex items-center'>\n            <div className='text-red-600 mr-2'>‚ö†Ô∏è</div>\n            <div>\n              <h4 className='text-red-800 font-medium'>Error</h4>\n              <p className='text-red-700 text-sm mt-1'>{error}</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Local Video Preview */}\n      {isSharing && (\n        <div className='bg-white rounded-lg shadow-md p-6'>\n          <h3 className='text-lg font-semibold text-gray-900 mb-4'>Your Screen (Preview)</h3>\n          <div className='relative'>\n            <VideoPlayer\n              ref={localVideoRef}\n              className='w-full max-w-2xl mx-auto rounded-lg border border-gray-200'\n              muted\n              autoPlay\n              playsInline\n            />\n            <div className='absolute top-2 right-2 bg-black bg-opacity-50 text-white px-2 py-1 rounded text-xs'>\n              You are sharing this screen\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Instructions */}\n      <div className='bg-blue-50 border border-blue-200 rounded-lg p-6'>\n        <h3 className='text-lg font-semibold text-blue-900 mb-4'>üìã Instructions</h3>\n        <div className='space-y-2 text-sm text-blue-800'>\n          <p>‚Ä¢ Click \"Start Sharing\" to begin screen sharing</p>\n          <p>‚Ä¢ Select the screen or application you want to share</p>\n          <p>‚Ä¢ Share the Room ID with viewers so they can join</p>\n          <p>‚Ä¢ Use the Chat feature to communicate with viewers</p>\n          <p>‚Ä¢ Click \"Stop Sharing\" when you're done</p>\n        </div>\n      </div>\n\n      {/* Actions */}\n      <div className='flex justify-center space-x-4'>\n        <button\n          onClick={onGoHome}\n          className='px-6 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors'\n        >\n          Back to Home\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default HostView;\n"],"names":["HostView","config","onGoHome","roomId","updateSenderSecret","useRoomContext","isSharing","setIsSharing","useState","connectionStatus","setConnectionStatus","viewerCount","setViewerCount","error","setError","shareButtonText","setShareButtonText","copyStatus","setCopyStatus","localVideoRef","useRef","startScreenShare","stopScreenShare","connectionState","peerConnections","webrtcError","useWebRTC","useEffect","API_ENDPOINTS","response","data","err","handleStartSharing","stream","handleStopSharing","handleShareToggle","copyRoomId","statusColor","useMemo","statusText","jsxs","jsx","VideoPlayer"],"mappings":"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"}