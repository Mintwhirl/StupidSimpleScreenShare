{"version":3,"file":"ViewerView-DVjjTSzW.js","sources":["../../src/components/ViewerView.jsx"],"sourcesContent":["import { useState, useEffect, useRef, useCallback } from 'react';\nimport VideoPlayer from './VideoPlayer';\nimport { useWebRTC } from '../hooks/useWebRTC';\n\nfunction ViewerView({ roomId, viewerId, setViewerId, config, onGoHome }) {\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const [isConnected, setIsConnected] = useState(false);\n  const [error, setError] = useState(null);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [hostStatus, setHostStatus] = useState('unknown');\n\n  const remoteVideoRef = useRef(null);\n  const {\n    connectToHost,\n    disconnect,\n    connectionState,\n    remoteStream,\n    error: webrtcError,\n  } = useWebRTC(roomId, 'viewer', config, viewerId);\n\n  // Update connection status based on WebRTC state\n  useEffect(() => {\n    setConnectionStatus(connectionState);\n    setIsConnected(connectionState === 'connected');\n  }, [connectionState]);\n\n  // Handle remote stream\n  useEffect(() => {\n    if (remoteStream && remoteVideoRef.current) {\n      remoteVideoRef.current.srcObject = remoteStream;\n    }\n  }, [remoteStream]);\n\n  // Handle WebRTC errors\n  useEffect(() => {\n    if (webrtcError) {\n      setError(webrtcError);\n      setIsConnecting(false);\n    }\n  }, [webrtcError]);\n\n  // Handle connection to host\n  const handleConnect = useCallback(async () => {\n    if (!roomId.trim()) {\n      setError('Please enter a room ID');\n      return;\n    }\n\n    try {\n      setError(null);\n      setIsConnecting(true);\n      setHostStatus('connecting');\n\n      await connectToHost();\n      setHostStatus('connected');\n    } catch (err) {\n      console.error('Error connecting to host:', err);\n      setError('Failed to connect to host. Please check the room ID and try again.');\n      setHostStatus('disconnected');\n    } finally {\n      setIsConnecting(false);\n    }\n  }, [roomId, connectToHost]);\n\n  // Auto-connect when component mounts\n  useEffect(() => {\n    if (roomId && !isConnecting && !isConnected) {\n      handleConnect();\n    }\n  }, [roomId, handleConnect, isConnected, isConnecting]);\n\n  // Handle disconnection\n  const handleDisconnect = async () => {\n    try {\n      await disconnect();\n      setHostStatus('disconnected');\n      if (remoteVideoRef.current) {\n        remoteVideoRef.current.srcObject = null;\n      }\n    } catch (err) {\n      console.error('Error disconnecting:', err);\n    }\n  };\n\n  // Handle reconnection\n  const handleReconnect = () => {\n    handleDisconnect().then(() => {\n      setTimeout(handleConnect, 1000);\n    });\n  };\n\n  // Generate viewer ID if not provided\n  const generateViewerId = () => {\n    const id = `viewer_${Math.random().toString(36).substring(2, 8)}`;\n    setViewerId(id);\n    return id;\n  };\n\n  // Get connection status color\n  const getStatusColor = () => {\n    switch (connectionStatus) {\n      case 'connected':\n        return 'text-green-600';\n      case 'connecting':\n        return 'text-yellow-600';\n      case 'disconnected':\n        return 'text-red-600';\n      default:\n        return 'text-gray-600';\n    }\n  };\n\n  // Get connection status text\n  const getStatusText = () => {\n    switch (connectionStatus) {\n      case 'connected':\n        return 'Connected';\n      case 'connecting':\n        return 'Connecting...';\n      case 'disconnected':\n        return 'Disconnected';\n      default:\n        return 'Unknown';\n    }\n  };\n\n  // Get host status color\n  const getHostStatusColor = () => {\n    switch (hostStatus) {\n      case 'connected':\n        return 'text-green-600';\n      case 'connecting':\n        return 'text-yellow-600';\n      case 'disconnected':\n        return 'text-red-600';\n      default:\n        return 'text-gray-600';\n    }\n  };\n\n  // Get host status text\n  const getHostStatusText = () => {\n    switch (hostStatus) {\n      case 'connected':\n        return 'Host Online';\n      case 'connecting':\n        return 'Connecting to Host...';\n      case 'disconnected':\n        return 'Host Offline';\n      default:\n        return 'Unknown';\n    }\n  };\n\n  return (\n    <div className='space-y-6'>\n      {/* Header */}\n      <div className='bg-white rounded-lg shadow-md p-6'>\n        <div className='flex items-center justify-between'>\n          <div>\n            <h2 className='text-2xl font-bold text-gray-900 mb-2'>üëÄ Viewing Room</h2>\n            <p className='text-gray-600'>\n              Connected to room: <span className='font-mono font-medium'>{roomId}</span>\n            </p>\n          </div>\n          <div className='text-right'>\n            <div className={`text-sm font-medium ${getStatusColor()}`}>Connection: {getStatusText()}</div>\n            <div className={`text-sm font-medium ${getHostStatusColor()}`}>{getHostStatusText()}</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Viewer ID Section */}\n      <div className='bg-white rounded-lg shadow-md p-6'>\n        <h3 className='text-lg font-semibold text-gray-900 mb-4'>Your Viewer ID</h3>\n        <div className='flex items-center space-x-4'>\n          <div className='flex-1'>\n            <input\n              type='text'\n              value={viewerId || ''}\n              onChange={(e) => setViewerId(e.target.value)}\n              placeholder='Enter your name or leave blank for auto-generated ID'\n              className='w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500'\n            />\n          </div>\n          <button\n            onClick={generateViewerId}\n            className='px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors'\n          >\n            Generate ID\n          </button>\n        </div>\n        <p className='text-sm text-gray-500 mt-2'>This ID helps identify you in the chat and diagnostics.</p>\n      </div>\n\n      {/* Connection Controls */}\n      <div className='bg-white rounded-lg shadow-md p-6'>\n        <h3 className='text-lg font-semibold text-gray-900 mb-4'>Connection Controls</h3>\n        <div className='flex items-center justify-center space-x-4'>\n          {!isConnected ? (\n            <button\n              onClick={handleConnect}\n              disabled={isConnecting}\n              className={`px-6 py-3 rounded-lg font-medium transition-colors ${\n                isConnecting\n                  ? 'bg-gray-400 text-white cursor-not-allowed'\n                  : 'bg-green-600 text-white hover:bg-green-700'\n              }`}\n            >\n              {isConnecting ? 'Connecting...' : 'Connect to Host'}\n            </button>\n          ) : (\n            <div className='flex items-center space-x-4'>\n              <button\n                onClick={handleReconnect}\n                className='px-6 py-3 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 transition-colors'\n              >\n                Reconnect\n              </button>\n              <button\n                onClick={handleDisconnect}\n                className='px-6 py-3 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors'\n              >\n                Disconnect\n              </button>\n            </div>\n          )}\n        </div>\n\n        {isConnected && (\n          <div className='mt-4 text-center'>\n            <div className='flex items-center justify-center space-x-2 text-green-600'>\n              <div className='w-2 h-2 bg-green-600 rounded-full animate-pulse'></div>\n              <span className='text-sm font-medium'>Connected to Host</span>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Error Display */}\n      {error && (\n        <div className='bg-red-50 border border-red-200 rounded-lg p-4'>\n          <div className='flex items-center'>\n            <div className='text-red-600 mr-2'>‚ö†Ô∏è</div>\n            <div>\n              <h4 className='text-red-800 font-medium'>Connection Error</h4>\n              <p className='text-red-700 text-sm mt-1'>{error}</p>\n            </div>\n          </div>\n          <div className='mt-3'>\n            <button\n              onClick={handleReconnect}\n              className='text-sm bg-red-600 text-white px-3 py-1 rounded hover:bg-red-700 transition-colors'\n            >\n              Try Again\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Remote Video Display */}\n      {isConnected && (\n        <div className='bg-white rounded-lg shadow-md p-6'>\n          <h3 className='text-lg font-semibold text-gray-900 mb-4'>Host's Screen</h3>\n          <div className='relative'>\n            <VideoPlayer\n              ref={remoteVideoRef}\n              className='w-full max-w-4xl mx-auto rounded-lg border border-gray-200 bg-black'\n              autoPlay\n              playsInline\n            />\n            {!remoteStream && (\n              <div className='absolute inset-0 flex items-center justify-center bg-gray-100 rounded-lg'>\n                <div className='text-center'>\n                  <div className='animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4'></div>\n                  <p className='text-gray-600'>Waiting for host to start sharing...</p>\n                </div>\n              </div>\n            )}\n            {remoteStream && (\n              <div className='absolute top-2 right-2 bg-black bg-opacity-50 text-white px-2 py-1 rounded text-xs'>\n                Live\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Waiting State */}\n      {!isConnected && !isConnecting && (\n        <div className='bg-white rounded-lg shadow-md p-6'>\n          <div className='text-center py-12'>\n            <div className='text-6xl mb-4'>üì∫</div>\n            <h3 className='text-xl font-semibold text-gray-900 mb-2'>Ready to View</h3>\n            <p className='text-gray-600 mb-6'>Click \"Connect to Host\" to start viewing the shared screen.</p>\n            <button\n              onClick={handleConnect}\n              className='px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors'\n            >\n              Connect to Host\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Instructions */}\n      <div className='bg-blue-50 border border-blue-200 rounded-lg p-6'>\n        <h3 className='text-lg font-semibold text-blue-900 mb-4'>üìã Instructions</h3>\n        <div className='space-y-2 text-sm text-blue-800'>\n          <p>‚Ä¢ Make sure the host has started sharing their screen</p>\n          <p>‚Ä¢ Click \"Connect to Host\" to join the viewing session</p>\n          <p>‚Ä¢ Use the Chat feature to communicate with the host</p>\n          <p>‚Ä¢ The screen will appear automatically when the host starts sharing</p>\n          <p>‚Ä¢ Click \"Disconnect\" when you're done viewing</p>\n        </div>\n      </div>\n\n      {/* Actions */}\n      <div className='flex justify-center space-x-4'>\n        <button\n          onClick={onGoHome}\n          className='px-6 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors'\n        >\n          Back to Home\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ViewerView;\n"],"names":["ViewerView","roomId","viewerId","setViewerId","config","onGoHome","connectionStatus","setConnectionStatus","useState","isConnected","setIsConnected","error","setError","isConnecting","setIsConnecting","hostStatus","setHostStatus","remoteVideoRef","useRef","connectToHost","disconnect","connectionState","remoteStream","webrtcError","useWebRTC","useEffect","handleConnect","useCallback","err","handleDisconnect","handleReconnect","generateViewerId","id","getStatusColor","getStatusText","getHostStatusColor","getHostStatusText","jsxs","jsx","e","VideoPlayer"],"mappings":"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"}