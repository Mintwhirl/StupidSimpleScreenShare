{"version":3,"file":"Diagnostics-ChxV_sFY.js","sources":["../../src/components/Diagnostics.jsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\n\nfunction Diagnostics({ roomId, role }) {\n  const [diagnostics, setDiagnostics] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [autoRefresh, setAutoRefresh] = useState(true);\n  const [refreshInterval, setRefreshInterval] = useState(5000);\n\n  // Detect browser capabilities\n  const detectBrowserCapabilities = () => {\n    const capabilities = {\n      userAgent: navigator.userAgent,\n      platform: navigator.platform,\n      webrtcSupport: !!(window.RTCPeerConnection || window.webkitRTCPeerConnection || window.mozRTCPeerConnection),\n      screenShareSupport: !!(navigator.mediaDevices && navigator.mediaDevices.getDisplayMedia),\n    };\n    return capabilities;\n  };\n\n  // Fetch diagnostics data\n  const fetchDiagnostics = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const response = await fetch(`/api/diagnostics?roomId=${roomId}&role=${role}`);\n\n      if (!response.ok) {\n        throw new Error(`Failed to fetch diagnostics: ${response.status}`);\n      }\n\n      const serverData = await response.json();\n\n      // Combine server data with client-side browser capabilities\n      const browserCapabilities = detectBrowserCapabilities();\n\n      const combinedData = {\n        ...serverData,\n        connectionStatus: serverData.room?.status || 'unknown',\n        role: role,\n        roomId: roomId,\n        browser: browserCapabilities,\n        timestamp: Date.now(),\n      };\n\n      setDiagnostics(combinedData);\n    } catch (err) {\n      console.error('Error fetching diagnostics:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [roomId, role]);\n\n  // Auto-refresh diagnostics\n  useEffect(() => {\n    if (autoRefresh && roomId) {\n      fetchDiagnostics();\n      const interval = setInterval(fetchDiagnostics, refreshInterval);\n      return () => clearInterval(interval);\n    }\n  }, [autoRefresh, refreshInterval, roomId, role, fetchDiagnostics]);\n\n  // Manual refresh\n  const handleRefresh = () => {\n    fetchDiagnostics();\n  };\n\n  // Format bytes\n  const formatBytes = (bytes) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return `${parseFloat((bytes / k ** i).toFixed(2))} ${sizes[i]}`;\n  };\n\n  // Format timestamp\n  const formatTimestamp = (timestamp) => {\n    return new Date(timestamp).toLocaleString();\n  };\n\n  // Get connection status color\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'connected':\n        return 'text-green-600';\n      case 'connecting':\n        return 'text-yellow-600';\n      case 'disconnected':\n        return 'text-red-600';\n      default:\n        return 'text-gray-600';\n    }\n  };\n\n  return (\n    <div className='flex flex-col h-full bg-white'>\n      {/* Header */}\n      <div className='flex-shrink-0 bg-green-600 text-white p-4'>\n        <div className='flex items-center justify-between'>\n          <h3 className='text-lg font-semibold'>üîß Diagnostics</h3>\n          <div className='flex items-center space-x-2'>\n            <button\n              onClick={handleRefresh}\n              disabled={loading}\n              className='px-3 py-1 text-sm bg-green-700 rounded hover:bg-green-800 disabled:opacity-50'\n            >\n              {loading ? 'Loading...' : 'Refresh'}\n            </button>\n          </div>\n        </div>\n        <p className='text-green-100 text-sm mt-1'>\n          Room: {roomId} | Role: {role}\n        </p>\n      </div>\n\n      {/* Controls */}\n      <div className='flex-shrink-0 bg-gray-50 border-b p-3'>\n        <div className='flex items-center justify-between'>\n          <label className='flex items-center space-x-2'>\n            <input\n              type='checkbox'\n              checked={autoRefresh}\n              onChange={(e) => setAutoRefresh(e.target.checked)}\n              className='rounded'\n            />\n            <span className='text-sm text-gray-700'>Auto-refresh</span>\n          </label>\n          <select\n            value={refreshInterval}\n            onChange={(e) => setRefreshInterval(Number(e.target.value))}\n            className='text-sm border border-gray-300 rounded px-2 py-1'\n          >\n            <option value={1000}>1s</option>\n            <option value={5000}>5s</option>\n            <option value={10000}>10s</option>\n            <option value={30000}>30s</option>\n          </select>\n        </div>\n      </div>\n\n      {/* Content */}\n      <div className='flex-1 overflow-y-auto p-4'>\n        {loading && !diagnostics && (\n          <div className='text-center text-gray-500 py-8'>\n            <div className='animate-spin rounded-full h-8 w-8 border-b-2 border-green-600 mx-auto mb-2'></div>\n            Loading diagnostics...\n          </div>\n        )}\n\n        {error && (\n          <div className='bg-red-50 border border-red-200 rounded-lg p-3 mb-4'>\n            <div className='text-red-600 text-sm'>‚ö†Ô∏è {error}</div>\n          </div>\n        )}\n\n        {diagnostics && (\n          <div className='space-y-4'>\n            {/* Connection Status */}\n            <div className='bg-white border border-gray-200 rounded-lg p-4'>\n              <h4 className='font-semibold text-gray-900 mb-3'>Connection Status</h4>\n              <div className='grid grid-cols-2 gap-4 text-sm'>\n                <div>\n                  <span className='text-gray-600'>Status:</span>\n                  <span className={`ml-2 font-medium ${getStatusColor(diagnostics.connectionStatus)}`}>\n                    {diagnostics.connectionStatus}\n                  </span>\n                </div>\n                <div>\n                  <span className='text-gray-600'>Role:</span>\n                  <span className='ml-2 font-medium'>{diagnostics.role}</span>\n                </div>\n                <div>\n                  <span className='text-gray-600'>Room ID:</span>\n                  <span className='ml-2 font-mono text-xs'>{diagnostics.roomId}</span>\n                </div>\n                <div>\n                  <span className='text-gray-600'>Last Updated:</span>\n                  <span className='ml-2 text-xs'>{formatTimestamp(diagnostics.timestamp)}</span>\n                </div>\n              </div>\n            </div>\n\n            {/* WebRTC Stats */}\n            {diagnostics.webrtc && (\n              <div className='bg-white border border-gray-200 rounded-lg p-4'>\n                <h4 className='font-semibold text-gray-900 mb-3'>WebRTC Statistics</h4>\n                <div className='space-y-2 text-sm'>\n                  <div className='grid grid-cols-2 gap-4'>\n                    <div>\n                      <span className='text-gray-600'>ICE Connection State:</span>\n                      <span className={`ml-2 font-medium ${getStatusColor(diagnostics.webrtc.iceConnectionState)}`}>\n                        {diagnostics.webrtc.iceConnectionState}\n                      </span>\n                    </div>\n                    <div>\n                      <span className='text-gray-600'>Signaling State:</span>\n                      <span className='ml-2 font-medium'>{diagnostics.webrtc.signalingState}</span>\n                    </div>\n                  </div>\n\n                  {diagnostics.webrtc.stats && (\n                    <div className='mt-3'>\n                      <h5 className='font-medium text-gray-800 mb-2'>Connection Stats</h5>\n                      <div className='grid grid-cols-2 gap-4 text-xs'>\n                        <div>\n                          <span className='text-gray-600'>Bytes Sent:</span>\n                          <span className='ml-2 font-mono'>{formatBytes(diagnostics.webrtc.stats.bytesSent || 0)}</span>\n                        </div>\n                        <div>\n                          <span className='text-gray-600'>Bytes Received:</span>\n                          <span className='ml-2 font-mono'>\n                            {formatBytes(diagnostics.webrtc.stats.bytesReceived || 0)}\n                          </span>\n                        </div>\n                        <div>\n                          <span className='text-gray-600'>Packets Sent:</span>\n                          <span className='ml-2 font-mono'>{diagnostics.webrtc.stats.packetsSent || 0}</span>\n                        </div>\n                        <div>\n                          <span className='text-gray-600'>Packets Received:</span>\n                          <span className='ml-2 font-mono'>{diagnostics.webrtc.stats.packetsReceived || 0}</span>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n\n            {/* Browser Info */}\n            <div className='bg-white border border-gray-200 rounded-lg p-4'>\n              <h4 className='font-semibold text-gray-900 mb-3'>Browser Information</h4>\n              <div className='grid grid-cols-2 gap-4 text-sm'>\n                <div>\n                  <span className='text-gray-600'>User Agent:</span>\n                  <span className='ml-2 text-xs font-mono'>{diagnostics.browser?.userAgent}</span>\n                </div>\n                <div>\n                  <span className='text-gray-600'>Platform:</span>\n                  <span className='ml-2'>{diagnostics.browser?.platform}</span>\n                </div>\n                <div>\n                  <span className='text-gray-600'>WebRTC Support:</span>\n                  <span\n                    className={`ml-2 font-medium ${\n                      diagnostics.browser?.webrtcSupport ? 'text-green-600' : 'text-red-600'\n                    }`}\n                  >\n                    {diagnostics.browser?.webrtcSupport ? 'Yes' : 'No'}\n                  </span>\n                </div>\n                <div>\n                  <span className='text-gray-600'>Screen Share Support:</span>\n                  <span\n                    className={`ml-2 font-medium ${\n                      diagnostics.browser?.screenShareSupport ? 'text-green-600' : 'text-red-600'\n                    }`}\n                  >\n                    {diagnostics.browser?.screenShareSupport ? 'Yes' : 'No'}\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            {/* Network Info */}\n            {diagnostics.network && (\n              <div className='bg-white border border-gray-200 rounded-lg p-4'>\n                <h4 className='font-semibold text-gray-900 mb-3'>Network Information</h4>\n                <div className='space-y-2 text-sm'>\n                  <div className='grid grid-cols-2 gap-4'>\n                    <div>\n                      <span className='text-gray-600'>Connection Type:</span>\n                      <span className='ml-2'>{diagnostics.network.connectionType || 'Unknown'}</span>\n                    </div>\n                    <div>\n                      <span className='text-gray-600'>Effective Type:</span>\n                      <span className='ml-2'>{diagnostics.network.effectiveType || 'Unknown'}</span>\n                    </div>\n                  </div>\n                  <div className='grid grid-cols-2 gap-4'>\n                    <div>\n                      <span className='text-gray-600'>Downlink:</span>\n                      <span className='ml-2'>{diagnostics.network.downlink || 'Unknown'} Mbps</span>\n                    </div>\n                    <div>\n                      <span className='text-gray-600'>RTT:</span>\n                      <span className='ml-2'>{diagnostics.network.rtt || 'Unknown'} ms</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Errors */}\n            {diagnostics.errors && diagnostics.errors.length > 0 && (\n              <div className='bg-red-50 border border-red-200 rounded-lg p-4'>\n                <h4 className='font-semibold text-red-900 mb-3'>Recent Errors</h4>\n                <div className='space-y-2'>\n                  {diagnostics.errors.map((error, index) => (\n                    <div key={index} className='text-sm text-red-800'>\n                      <div className='font-medium'>{error.message}</div>\n                      <div className='text-xs text-red-600 mt-1'>{formatTimestamp(error.timestamp)}</div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n\n        {!diagnostics && !loading && !error && (\n          <div className='text-center text-gray-500 py-8'>\n            <div className='text-4xl mb-2'>üîß</div>\n            <p>No diagnostics data available</p>\n            <p className='text-sm'>Click refresh to load diagnostics</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Diagnostics;\n"],"names":["Diagnostics","roomId","role","diagnostics","setDiagnostics","useState","loading","setLoading","error","setError","autoRefresh","setAutoRefresh","refreshInterval","setRefreshInterval","detectBrowserCapabilities","fetchDiagnostics","useCallback","response","serverData","browserCapabilities","combinedData","err","useEffect","interval","handleRefresh","formatBytes","bytes","k","sizes","i","formatTimestamp","timestamp","getStatusColor","status","jsxs","jsx","e","index"],"mappings":"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"}